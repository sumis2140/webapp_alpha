{"ast":null,"code":"import _slicedToArray from\"/home/fraction/Music/Vsumm_webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AgGridReact}from'ag-grid-react';import'ag-grid-community/dist/styles/ag-grid.css';import'ag-grid-community/dist/styles/ag-theme-alpine.css';// import  RowGroupingModule  from 'ag-grid-community ' \nimport Gridpopup from'./App';import'../../App.css';function Grid(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),gridApi=_useState2[0],setGridApi=_useState2[1];var columnDefs=[{headerName:\"ID\",field:\"id\",checkboxSelection:true,headerCheckboxSelection:true},{headerName:\"Floor\",field:\"name\"},{headerName:\"Group\",field:\"email\"},{headerName:\"Camera\",field:\"body\"},{headerName:\"Button\",field:\"id\"}];var defaultColDef={sortable:true,editable:true,flex:1,filter:true,floatingFilter:true};var onGridReady=function onGridReady(params){setGridApi(params);fetch(\"https://jsonplaceholder.typicode.com/comments\").then(function(resp){return resp.json();}).then(function(resp){params.api.applyTransaction({add:resp});//adding API data to grid\nparams.api.paginationGoToPage(10);console.log(resp);});};var onPaginationChange=function onPaginationChange(pageSize){gridApi.api.paginationSetPageSize(Number(pageSize));};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",{align:\"center\"},\"Fraction Analytics Dashboard\"),/*#__PURE__*/React.createElement(\"h3\",null,\"Video summarization details\"),/*#__PURE__*/React.createElement(\"select\",{onChange:function onChange(e){return onPaginationChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"24\"},\"One day\"),/*#__PURE__*/React.createElement(\"option\",{value:\"48\"},\"Two days\"),/*#__PURE__*/React.createElement(\"option\",{value:\"168\"},\"one week \"),/*#__PURE__*/React.createElement(\"option\",{value:\"720\"},\"One month\")),/*#__PURE__*/React.createElement(\"div\",{className:\"ag-theme-alpine\",style:{height:'1180px'}},/*#__PURE__*/React.createElement(AgGridReact,{columnDefs:columnDefs,defaultColDef:defaultColDef,onGridReady:onGridReady,pagination:true,paginationPageSize:24// paginationAutoPageSize={true}\n}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Gridpopup,null)));}export default Grid;","map":{"version":3,"sources":["/home/fraction/Music/Vsumm_webapp/src/components/Grid-Table/grid.js"],"names":["React","useState","AgGridReact","Gridpopup","Grid","gridApi","setGridApi","columnDefs","headerName","field","checkboxSelection","headerCheckboxSelection","defaultColDef","sortable","editable","flex","filter","floatingFilter","onGridReady","params","fetch","then","resp","json","api","applyTransaction","add","paginationGoToPage","console","log","onPaginationChange","pageSize","paginationSetPageSize","Number","e","target","value","height"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAO,2CAAP,CACA,MAAO,mDAAP,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,OAAtB,CACA,MAAO,eAAP,CACA,QAASC,CAAAA,IAAT,EAAgB,CACd,cAA2BH,QAAQ,EAAnC,wCAAOI,OAAP,eAAeC,UAAf,eACA,GAAMC,CAAAA,UAAU,CAAG,CACjB,CAAEC,UAAU,CAAE,IAAd,CAAoBC,KAAK,CAAE,IAA3B,CAAkCC,iBAAiB,CAAC,IAApD,CAAyDC,uBAAuB,CAAC,IAAjF,CADiB,CAEjB,CAAEH,UAAU,CAAE,OAAd,CAAuBC,KAAK,CAAE,MAA9B,CAFiB,CAGjB,CAAED,UAAU,CAAE,OAAd,CAAuBC,KAAK,CAAE,OAA9B,CAHiB,CAIjB,CAAED,UAAU,CAAE,QAAd,CAAwBC,KAAK,CAAE,MAA/B,CAJiB,CAKjB,CAAED,UAAU,CAAE,QAAd,CAAwBC,KAAK,CAAE,IAA/B,CALiB,CAAnB,CASA,GAAMG,CAAAA,aAAa,CAAG,CACpBC,QAAQ,CAAE,IADU,CAEpBC,QAAQ,CAAE,IAFU,CAGpBC,IAAI,CAAE,CAHc,CAGXC,MAAM,CAAE,IAHG,CAIpBC,cAAc,CAAE,IAJI,CAAtB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9Bb,UAAU,CAACa,MAAD,CAAV,CACAC,KAAK,CAAC,+CAAD,CAAL,CAAuDC,IAAvD,CAA4D,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EAAhE,EACGF,IADH,CACQ,SAAAC,IAAI,CAAI,CACZH,MAAM,CAACK,GAAP,CAAWC,gBAAX,CAA4B,CAAEC,GAAG,CAAEJ,IAAP,CAA5B,EAA2C;AAC3CH,MAAM,CAACK,GAAP,CAAWG,kBAAX,CAA8B,EAA9B,EACAC,OAAO,CAACC,GAAR,CAAYP,IAAZ,EACD,CALH,EAOD,CATD,CAUD,GAAMQ,CAAAA,kBAAkB,CAAC,QAAnBA,CAAAA,kBAAmB,CAACC,QAAD,CAAY,CACnC1B,OAAO,CAACmB,GAAR,CAAYQ,qBAAZ,CAAkCC,MAAM,CAACF,QAAD,CAAxC,EACD,CAFD,CAGC,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,0BAAI,KAAK,CAAC,QAAV,iCADF,cAEE,4DAFF,cAGE,8BAAQ,QAAQ,CAAE,kBAACG,CAAD,QAAKJ,CAAAA,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EAAlB,eACE,8BAAQ,KAAK,CAAC,IAAd,YADF,cAEE,8BAAQ,KAAK,CAAC,IAAd,aAFF,cAGE,8BAAQ,KAAK,CAAC,KAAd,cAHF,cAIE,8BAAQ,KAAK,CAAC,KAAd,cAJF,CAHF,cASE,2BAAK,SAAS,CAAC,iBAAf,CAAiC,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAV,CAAxC,eACE,oBAAC,WAAD,EACE,UAAU,CAAE9B,UADd,CAEE,aAAa,CAAEK,aAFjB,CAGE,WAAW,CAAEM,WAHf,CAIE,UAAU,CAAE,IAJd,CAKE,kBAAkB,CAAE,EACpB;AANF,EADF,cAUE,8BAVF,cAWE,8BAXF,cAYE,8BAZF,cAYO,8BAZP,cAaE,8BAbF,cAcE,oBAAC,SAAD,MAdF,CATF,CADF,CA4BD,CAED,cAAed,CAAAA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n// import  RowGroupingModule  from 'ag-grid-community ' \nimport Gridpopup from './App';\nimport '../../App.css'; \nfunction Grid() {\n  const [gridApi,setGridApi]=useState()\n  const columnDefs = [\n    { headerName: \"ID\", field: \"id\",  checkboxSelection:true,headerCheckboxSelection:true,}, \n    { headerName: \"Floor\", field: \"name\",},\n    { headerName: \"Group\", field: \"email\", },\n    { headerName: \"Camera\", field: \"body\" },\n    { headerName: \"Button\", field: \"id\" },\n    \n  ]  \n\n  const defaultColDef = {\n    sortable: true,\n    editable: true,\n    flex: 1, filter: true,\n    floatingFilter: true, \n  }\n\n  const onGridReady = (params) => {\n    setGridApi(params)\n    fetch(\"https://jsonplaceholder.typicode.com/comments\").then(resp => resp.json())\n      .then(resp => {\n        params.api.applyTransaction({ add: resp }) //adding API data to grid\n        params.api.paginationGoToPage(10)\n        console.log(resp)\n      })\n     \n  }\n const onPaginationChange=(pageSize)=>{\n   gridApi.api.paginationSetPageSize(Number(pageSize))\n }\n  return (\n    <div className=\"App\">\n      <h1 align=\"center\">Fraction Analytics Dashboard</h1>\n      <h3>Video summarization details</h3>\n      <select onChange={(e)=>onPaginationChange(e.target.value)}>\n        <option value='24'>One day</option>\n        <option value='48'>Two days</option>\n        <option value='168'>one week </option>\n        <option value='720'>One month</option>\n      </select>\n      <div className=\"ag-theme-alpine\" style={{ height: '1180px'  }}>\n        <AgGridReact\n          columnDefs={columnDefs}\n          defaultColDef={defaultColDef}\n          onGridReady={onGridReady}\n          pagination={true}\n          paginationPageSize={24}\n          // paginationAutoPageSize={true}\n          >\n        </AgGridReact>\n        <br/>\n        <br/>\n        <br/><br/>\n        <br/>\n        <Gridpopup/>\n      </div>\n    </div>\n  );\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}