{"ast":null,"code":"import _slicedToArray from\"/home/fraction/Music/Vsumm_webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../../App.css\";import React,{useEffect,useState}from\"react\";import{AgGridReact}from\"ag-grid-react\";import\"ag-grid-community/dist/styles/ag-grid.css\";import\"ag-grid-community/dist/styles/ag-theme-alpine.css\";import Grid from\"../Grid-Table/grid\";var dateFilterParams={comparator:function comparator(filterLocalDateAtMidnight,cellValue){var dateAsString=cellValue;if(dateAsString==null)return-1;var dateParts=dateAsString.split(\"-\");var cellDate=new Date(Number(dateParts[2]),Number(dateParts[1])-1,Number(dateParts[0]));if(filterLocalDateAtMidnight.getTime()===cellDate.getTime()){return 0;}if(cellDate<filterLocalDateAtMidnight){return-1;}if(cellDate>filterLocalDateAtMidnight){return 1;}},browserDatePicker:true};function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),gridApi=_useState2[0],setGridApi=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),startDate=_useState4[0],setStartDate=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),endDate=_useState6[0],setEndDate=_useState6[1];var rowData=[{company:\"Toyota\",Floor:\"Floor1\",group:\"group1\",date:\"08-04-2022\"},{company:\"Ford\",Floor:\"Floor2\",group:\"group2\",date:\"06-04-2022\"},{company:\"Porsche\",Floor:\"Floor3\",group:\"group3\",date:\"04-04-2022\"},{company:\"Mers\",Floor:\"Floor4\",group:\"group5\",date:\"05-04-2022\"},{company:\"Mers\",Floor:\"Floor5\",group:\"group5\",date:\"07-04-2022\"}];var columns=[{headerName:\"company\",field:\"company\"},{headerName:\"group\",field:\"group\"},{headerName:\"Floor\",field:\"Floor\"},{headerName:\"Date\",field:\"date\",filter:\"agDateColumnFilter\",filterParams:dateFilterParams}];var defColumnDefs={flex:1};var onGridReady=function onGridReady(params){setGridApi(params);};var getFilterType=function getFilterType(){if(startDate!==\"\"&&endDate!==\"\")return\"inRange\";else if(startDate!==\"\")return\"greaterThan\";else if(endDate!==\"\")return\"lessThan\";};useEffect(function(){if(gridApi){if(startDate!==\"\"&&endDate!==\"\"&&startDate>endDate){alert(\"Start Date should be before End Date\");setEndDate(\"\");}else{var dateFilterComponent=gridApi.api.getFilterInstance(\"date\");dateFilterComponent.setFloor({type:getFilterType(),dateFrom:startDate?startDate:endDate,dateTo:endDate});gridApi.api.onFilterChanged();}}},[startDate,endDate]);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h2\",{align:\"center\"},\"Fraction Daterange Picker\"),/*#__PURE__*/React.createElement(\"p\",{align:\"center\"},\"Date Range Filtering \"),/*#__PURE__*/React.createElement(\"div\",{className:\"ag-theme-alpine\",style:{height:400}},\"From :\",\" \",/*#__PURE__*/React.createElement(\"input\",{type:\"date\",value:startDate,onChange:function onChange(e){return setStartDate(e.target.value);}}),\"To :\",\" \",/*#__PURE__*/React.createElement(\"input\",{type:\"date\",value:endDate,onChange:function onChange(e){return setEndDate(e.target.value);}}),/*#__PURE__*/React.createElement(AgGridReact,{rowData:rowData,columnDefs:columns,defaultColDef:defColumnDefs,onGridReady:onGridReady})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Grid,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null));}export default App;","map":{"version":3,"sources":["/home/fraction/Music/Vsumm_webapp/src/components/pages/Services.js"],"names":["React","useEffect","useState","AgGridReact","Grid","dateFilterParams","comparator","filterLocalDateAtMidnight","cellValue","dateAsString","dateParts","split","cellDate","Date","Number","getTime","browserDatePicker","App","gridApi","setGridApi","startDate","setStartDate","endDate","setEndDate","rowData","company","Floor","group","date","columns","headerName","field","filter","filterParams","defColumnDefs","flex","onGridReady","params","getFilterType","alert","dateFilterComponent","api","getFilterInstance","setFloor","type","dateFrom","dateTo","onFilterChanged","height","e","target","value"],"mappings":"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","sourcesContent":["import \"../../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport Grid from \"../Grid-Table/grid\";\n\n\nconst dateFilterParams = {\n  comparator: function (filterLocalDateAtMidnight, cellValue) {\n    var dateAsString = cellValue;\n    if (dateAsString == null) return -1;\n    var dateParts = dateAsString.split(\"-\");\n    var cellDate = new Date(\n      Number(dateParts[2]),\n      Number(dateParts[1]) - 1,\n      Number(dateParts[0])\n    );\n    if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n      return 0;\n    }\n    if (cellDate < filterLocalDateAtMidnight) {\n      return -1;\n    }\n    if (cellDate > filterLocalDateAtMidnight) {\n      return 1;\n    }\n  },\n  browserDatePicker: true,\n};\n\nfunction App() {\n  const [gridApi, setGridApi] = useState();\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const rowData = [\n    { company: \"Toyota\", Floor: \"Floor1\", group: \"group1\", date: \"08-04-2022\" },\n    { company: \"Ford\", Floor: \"Floor2\", group: \"group2\", date: \"06-04-2022\" },\n    { company: \"Porsche\", Floor: \"Floor3\", group: \"group3\", date: \"04-04-2022\" },\n    { company: \"Mers\", Floor: \"Floor4\", group: \"group5\", date: \"05-04-2022\" },\n    { company: \"Mers\", Floor: \"Floor5\", group: \"group5\", date: \"07-04-2022\" },\n  ];\n\n  const columns = [\n    { headerName: \"company\", field: \"company\" },\n    { headerName: \"group\", field: \"group\" },\n    { headerName: \"Floor\", field: \"Floor\" },\n    {\n      headerName: \"Date\",\n      field: \"date\",\n      filter: \"agDateColumnFilter\",\n      filterParams: dateFilterParams,\n    },\n  ];\n  const defColumnDefs = { flex: 1 };\n\n  const onGridReady = (params) => {\n    setGridApi(params);\n  };\n  const getFilterType = () => {\n    if (startDate !== \"\" && endDate !== \"\") return \"inRange\";\n    else if (startDate !== \"\") return \"greaterThan\";\n    else if (endDate !== \"\") return \"lessThan\";\n  };\n  useEffect(() => {\n    if (gridApi) {\n      if (startDate !== \"\" && endDate !== \"\" && startDate > endDate) {\n        alert(\"Start Date should be before End Date\");\n        setEndDate(\"\");\n      } else {\n        var dateFilterComponent = gridApi.api.getFilterInstance(\"date\");\n        dateFilterComponent.setFloor({\n          type: getFilterType(),\n          dateFrom: startDate ? startDate : endDate,\n          dateTo: endDate,\n        });\n        gridApi.api.onFilterChanged();\n      }\n    }\n  }, [startDate, endDate]);\n  return (\n    <div className=\"App\">\n      <h2 align=\"center\">Fraction Daterange Picker</h2>\n      <p align=\"center\">Date Range Filtering </p>\n      <div className=\"ag-theme-alpine\" style={{ height: 400 }}>\n        From :{\" \"}\n        <input\n          type=\"date\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n        To :{\" \"}\n        <input\n          type=\"date\"\n          value={endDate}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n        <AgGridReact\n          rowData={rowData}\n          columnDefs={columns}\n          defaultColDef={defColumnDefs}\n          onGridReady={onGridReady}\n        />\n      </div>\n      <br />\n      <br />\n      <br />\n      <br />\n      <Grid />\n      <br />\n      <br />\n      <br />\n      <br />\n      \n      {/* <LandingPage /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}